//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18046
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hangout.Cloud.Agent.GeocodeService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://dev.virtualearth.net/webservices/v1/geocode/contracts", ConfigurationName="GeocodeService.IGeocodeService")]
    public interface IGeocodeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dev.virtualearth.net/webservices/v1/geocode/contracts/IGeocodeService/Geoc" +
            "ode", ReplyAction="http://dev.virtualearth.net/webservices/v1/geocode/contracts/IGeocodeService/Geoc" +
            "odeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Hangout.Web.GeocodeService.ResponseSummary), Action="http://dev.virtualearth.net/webservices/v1/geocode/contracts/IGeocodeService/Geoc" +
            "odeResponseSummaryFault", Name="ResponseSummary", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
        Hangout.Web.GeocodeService.GeocodeResponse Geocode(Hangout.Web.GeocodeService.GeocodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dev.virtualearth.net/webservices/v1/geocode/contracts/IGeocodeService/Reve" +
            "rseGeocode", ReplyAction="http://dev.virtualearth.net/webservices/v1/geocode/contracts/IGeocodeService/Reve" +
            "rseGeocodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Hangout.Web.GeocodeService.ResponseSummary), Action="http://dev.virtualearth.net/webservices/v1/geocode/contracts/IGeocodeService/Reve" +
            "rseGeocodeResponseSummaryFault", Name="ResponseSummary", Namespace="http://dev.virtualearth.net/webservices/v1/common")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Hangout.Web.GeocodeService.GeocodeLocation))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Hangout.Web.GeocodeService.UserLocation))]
        Hangout.Web.GeocodeService.GeocodeResponse ReverseGeocode(Hangout.Web.GeocodeService.ReverseGeocodeRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGeocodeServiceChannel : Hangout.Cloud.Agent.GeocodeService.IGeocodeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GeocodeServiceClient : System.ServiceModel.ClientBase<Hangout.Cloud.Agent.GeocodeService.IGeocodeService>, Hangout.Cloud.Agent.GeocodeService.IGeocodeService {
        
        public GeocodeServiceClient() {
        }
        
        public GeocodeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GeocodeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GeocodeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GeocodeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Hangout.Web.GeocodeService.GeocodeResponse Geocode(Hangout.Web.GeocodeService.GeocodeRequest request) {
            return base.Channel.Geocode(request);
        }
        
        public Hangout.Web.GeocodeService.GeocodeResponse ReverseGeocode(Hangout.Web.GeocodeService.ReverseGeocodeRequest request) {
            return base.Channel.ReverseGeocode(request);
        }
    }
}
