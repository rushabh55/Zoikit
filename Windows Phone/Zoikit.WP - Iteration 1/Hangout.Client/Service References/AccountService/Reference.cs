//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace Hangout.Client.AccountService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserData", Namespace="http://schemas.datacontract.org/2004/07/Hangout.Web.Services.Objects.Accounts")]
    public partial class UserData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> AgeField;
        
        private string BioField;
        
        private System.Nullable<System.DateTime> BirthdayField;
        
        private System.Nullable<System.DateTime> DateTimeStampField;
        
        private System.Nullable<System.DateTime> DateTimeUpdatedField;
        
        private string DefaultLengthUnitsField;
        
        private string EmailField;
        
        private string FirstNameField;
        
        private System.Nullable<bool> GenderField;
        
        private string LargeProfilePicURLField;
        
        private string LastNameField;
        
        private string NameField;
        
        private string PhoneField;
        
        private string ProfilePicURLField;
        
        private string RelationshipStatusField;
        
        private System.Nullable<float> TimezoneField;
        
        private System.Guid UserIDField;
        
        private string UsernameField;
        
        private string ZATField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bio {
            get {
                return this.BioField;
            }
            set {
                if ((object.ReferenceEquals(this.BioField, value) != true)) {
                    this.BioField = value;
                    this.RaisePropertyChanged("Bio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Birthday {
            get {
                return this.BirthdayField;
            }
            set {
                if ((this.BirthdayField.Equals(value) != true)) {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTimeStamp {
            get {
                return this.DateTimeStampField;
            }
            set {
                if ((this.DateTimeStampField.Equals(value) != true)) {
                    this.DateTimeStampField = value;
                    this.RaisePropertyChanged("DateTimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTimeUpdated {
            get {
                return this.DateTimeUpdatedField;
            }
            set {
                if ((this.DateTimeUpdatedField.Equals(value) != true)) {
                    this.DateTimeUpdatedField = value;
                    this.RaisePropertyChanged("DateTimeUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultLengthUnits {
            get {
                return this.DefaultLengthUnitsField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultLengthUnitsField, value) != true)) {
                    this.DefaultLengthUnitsField = value;
                    this.RaisePropertyChanged("DefaultLengthUnits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LargeProfilePicURL {
            get {
                return this.LargeProfilePicURLField;
            }
            set {
                if ((object.ReferenceEquals(this.LargeProfilePicURLField, value) != true)) {
                    this.LargeProfilePicURLField = value;
                    this.RaisePropertyChanged("LargeProfilePicURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfilePicURL {
            get {
                return this.ProfilePicURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfilePicURLField, value) != true)) {
                    this.ProfilePicURLField = value;
                    this.RaisePropertyChanged("ProfilePicURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelationshipStatus {
            get {
                return this.RelationshipStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.RelationshipStatusField, value) != true)) {
                    this.RelationshipStatusField = value;
                    this.RaisePropertyChanged("RelationshipStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> Timezone {
            get {
                return this.TimezoneField;
            }
            set {
                if ((this.TimezoneField.Equals(value) != true)) {
                    this.TimezoneField = value;
                    this.RaisePropertyChanged("Timezone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZAT {
            get {
                return this.ZATField;
            }
            set {
                if ((object.ReferenceEquals(this.ZATField, value) != true)) {
                    this.ZATField = value;
                    this.RaisePropertyChanged("ZAT");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Status", Namespace="http://schemas.datacontract.org/2004/07/Hangout.Web.Services.Objects.Status")]
    public enum Status : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvalidZAT = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompleteUserData", Namespace="http://schemas.datacontract.org/2004/07/Hangout.Web.Services.Objects.Accounts")]
    public partial class CompleteUserData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Hangout.Client.AccountService.FacebookData FacebookDataField;
        
        private Hangout.Client.AccountService.FoursquareData FoursquareDataField;
        
        private Hangout.Client.AccountService.TwitterData TwitterDataField;
        
        private Hangout.Client.AccountService.UserData UserDataField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Hangout.Client.AccountService.FacebookData FacebookData {
            get {
                return this.FacebookDataField;
            }
            set {
                if ((object.ReferenceEquals(this.FacebookDataField, value) != true)) {
                    this.FacebookDataField = value;
                    this.RaisePropertyChanged("FacebookData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Hangout.Client.AccountService.FoursquareData FoursquareData {
            get {
                return this.FoursquareDataField;
            }
            set {
                if ((object.ReferenceEquals(this.FoursquareDataField, value) != true)) {
                    this.FoursquareDataField = value;
                    this.RaisePropertyChanged("FoursquareData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Hangout.Client.AccountService.TwitterData TwitterData {
            get {
                return this.TwitterDataField;
            }
            set {
                if ((object.ReferenceEquals(this.TwitterDataField, value) != true)) {
                    this.TwitterDataField = value;
                    this.RaisePropertyChanged("TwitterData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Hangout.Client.AccountService.UserData UserData {
            get {
                return this.UserDataField;
            }
            set {
                if ((object.ReferenceEquals(this.UserDataField, value) != true)) {
                    this.UserDataField = value;
                    this.RaisePropertyChanged("UserData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FacebookData", Namespace="http://schemas.datacontract.org/2004/07/Hangout.Web.Services.Objects.Accounts")]
    public partial class FacebookData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AboutMeField;
        
        private string AccessTokenField;
        
        private System.Nullable<int> AgeField;
        
        private System.Nullable<System.DateTime> BirthdayField;
        
        private System.DateTime DateTimeAddedField;
        
        private System.DateTime DateTimeUpdatedField;
        
        private string EmailField;
        
        private System.Nullable<long> FacebookIDField;
        
        private string FirstNameField;
        
        private System.Nullable<bool> GenderField;
        
        private string LargeProfilePicURLField;
        
        private string LastNameField;
        
        private string LinkField;
        
        private string PhoneField;
        
        private string ProfilePicURLField;
        
        private string RelationshipStatusField;
        
        private System.Nullable<float> TimeZoneField;
        
        private System.Guid UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AboutMe {
            get {
                return this.AboutMeField;
            }
            set {
                if ((object.ReferenceEquals(this.AboutMeField, value) != true)) {
                    this.AboutMeField = value;
                    this.RaisePropertyChanged("AboutMe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Birthday {
            get {
                return this.BirthdayField;
            }
            set {
                if ((this.BirthdayField.Equals(value) != true)) {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTimeAdded {
            get {
                return this.DateTimeAddedField;
            }
            set {
                if ((this.DateTimeAddedField.Equals(value) != true)) {
                    this.DateTimeAddedField = value;
                    this.RaisePropertyChanged("DateTimeAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTimeUpdated {
            get {
                return this.DateTimeUpdatedField;
            }
            set {
                if ((this.DateTimeUpdatedField.Equals(value) != true)) {
                    this.DateTimeUpdatedField = value;
                    this.RaisePropertyChanged("DateTimeUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FacebookID {
            get {
                return this.FacebookIDField;
            }
            set {
                if ((this.FacebookIDField.Equals(value) != true)) {
                    this.FacebookIDField = value;
                    this.RaisePropertyChanged("FacebookID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LargeProfilePicURL {
            get {
                return this.LargeProfilePicURLField;
            }
            set {
                if ((object.ReferenceEquals(this.LargeProfilePicURLField, value) != true)) {
                    this.LargeProfilePicURLField = value;
                    this.RaisePropertyChanged("LargeProfilePicURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Link {
            get {
                return this.LinkField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkField, value) != true)) {
                    this.LinkField = value;
                    this.RaisePropertyChanged("Link");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfilePicURL {
            get {
                return this.ProfilePicURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfilePicURLField, value) != true)) {
                    this.ProfilePicURLField = value;
                    this.RaisePropertyChanged("ProfilePicURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelationshipStatus {
            get {
                return this.RelationshipStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.RelationshipStatusField, value) != true)) {
                    this.RelationshipStatusField = value;
                    this.RaisePropertyChanged("RelationshipStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> TimeZone {
            get {
                return this.TimeZoneField;
            }
            set {
                if ((this.TimeZoneField.Equals(value) != true)) {
                    this.TimeZoneField = value;
                    this.RaisePropertyChanged("TimeZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FoursquareData", Namespace="http://schemas.datacontract.org/2004/07/Hangout.Web.Services.Objects.Accounts")]
    public partial class FoursquareData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AccessTokenField;
        
        private string BioField;
        
        private System.DateTime DateTimeAddedField;
        
        private System.DateTime DateTimeUpdatedField;
        
        private string EmailField;
        
        private string FacebookField;
        
        private string FirstNameField;
        
        private long FoursquareIDField;
        
        private System.Nullable<bool> GenderField;
        
        private string HomeCityField;
        
        private string LastNameField;
        
        private string PhoneField;
        
        private string PhotoPrefixField;
        
        private string PhotoSuffixField;
        
        private string TwitterField;
        
        private System.Guid UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bio {
            get {
                return this.BioField;
            }
            set {
                if ((object.ReferenceEquals(this.BioField, value) != true)) {
                    this.BioField = value;
                    this.RaisePropertyChanged("Bio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTimeAdded {
            get {
                return this.DateTimeAddedField;
            }
            set {
                if ((this.DateTimeAddedField.Equals(value) != true)) {
                    this.DateTimeAddedField = value;
                    this.RaisePropertyChanged("DateTimeAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTimeUpdated {
            get {
                return this.DateTimeUpdatedField;
            }
            set {
                if ((this.DateTimeUpdatedField.Equals(value) != true)) {
                    this.DateTimeUpdatedField = value;
                    this.RaisePropertyChanged("DateTimeUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Facebook {
            get {
                return this.FacebookField;
            }
            set {
                if ((object.ReferenceEquals(this.FacebookField, value) != true)) {
                    this.FacebookField = value;
                    this.RaisePropertyChanged("Facebook");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FoursquareID {
            get {
                return this.FoursquareIDField;
            }
            set {
                if ((this.FoursquareIDField.Equals(value) != true)) {
                    this.FoursquareIDField = value;
                    this.RaisePropertyChanged("FoursquareID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomeCity {
            get {
                return this.HomeCityField;
            }
            set {
                if ((object.ReferenceEquals(this.HomeCityField, value) != true)) {
                    this.HomeCityField = value;
                    this.RaisePropertyChanged("HomeCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhotoPrefix {
            get {
                return this.PhotoPrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoPrefixField, value) != true)) {
                    this.PhotoPrefixField = value;
                    this.RaisePropertyChanged("PhotoPrefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhotoSuffix {
            get {
                return this.PhotoSuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoSuffixField, value) != true)) {
                    this.PhotoSuffixField = value;
                    this.RaisePropertyChanged("PhotoSuffix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Twitter {
            get {
                return this.TwitterField;
            }
            set {
                if ((object.ReferenceEquals(this.TwitterField, value) != true)) {
                    this.TwitterField = value;
                    this.RaisePropertyChanged("Twitter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TwitterData", Namespace="http://schemas.datacontract.org/2004/07/Hangout.Web.Services.Objects.Accounts")]
    public partial class TwitterData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AboutMeField;
        
        private string AccessTokenField;
        
        private string AccessTokenSecretField;
        
        private System.DateTime DateTimeAddedField;
        
        private System.DateTime DateTimeUpdatedField;
        
        private System.Nullable<int> FollowersCountField;
        
        private System.Nullable<int> FollowingCountField;
        
        private string LinkField;
        
        private string LocationField;
        
        private string ProfilePicURLField;
        
        private string ScreenNameField;
        
        private string TimeZoneField;
        
        private System.Nullable<long> TwitterIDField;
        
        private System.Guid UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AboutMe {
            get {
                return this.AboutMeField;
            }
            set {
                if ((object.ReferenceEquals(this.AboutMeField, value) != true)) {
                    this.AboutMeField = value;
                    this.RaisePropertyChanged("AboutMe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessToken {
            get {
                return this.AccessTokenField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenField, value) != true)) {
                    this.AccessTokenField = value;
                    this.RaisePropertyChanged("AccessToken");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessTokenSecret {
            get {
                return this.AccessTokenSecretField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessTokenSecretField, value) != true)) {
                    this.AccessTokenSecretField = value;
                    this.RaisePropertyChanged("AccessTokenSecret");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTimeAdded {
            get {
                return this.DateTimeAddedField;
            }
            set {
                if ((this.DateTimeAddedField.Equals(value) != true)) {
                    this.DateTimeAddedField = value;
                    this.RaisePropertyChanged("DateTimeAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTimeUpdated {
            get {
                return this.DateTimeUpdatedField;
            }
            set {
                if ((this.DateTimeUpdatedField.Equals(value) != true)) {
                    this.DateTimeUpdatedField = value;
                    this.RaisePropertyChanged("DateTimeUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FollowersCount {
            get {
                return this.FollowersCountField;
            }
            set {
                if ((this.FollowersCountField.Equals(value) != true)) {
                    this.FollowersCountField = value;
                    this.RaisePropertyChanged("FollowersCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FollowingCount {
            get {
                return this.FollowingCountField;
            }
            set {
                if ((this.FollowingCountField.Equals(value) != true)) {
                    this.FollowingCountField = value;
                    this.RaisePropertyChanged("FollowingCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Link {
            get {
                return this.LinkField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkField, value) != true)) {
                    this.LinkField = value;
                    this.RaisePropertyChanged("Link");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfilePicURL {
            get {
                return this.ProfilePicURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfilePicURLField, value) != true)) {
                    this.ProfilePicURLField = value;
                    this.RaisePropertyChanged("ProfilePicURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScreenName {
            get {
                return this.ScreenNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ScreenNameField, value) != true)) {
                    this.ScreenNameField = value;
                    this.RaisePropertyChanged("ScreenName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeZone {
            get {
                return this.TimeZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeZoneField, value) != true)) {
                    this.TimeZoneField = value;
                    this.RaisePropertyChanged("TimeZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> TwitterID {
            get {
                return this.TwitterIDField;
            }
            set {
                if ((this.TwitterIDField.Equals(value) != true)) {
                    this.TwitterIDField = value;
                    this.RaisePropertyChanged("TwitterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountService.IAccountService")]
    public interface IAccountService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAccountService/IsConfirmEmail", ReplyAction="http://tempuri.org/IAccountService/IsConfirmEmailResponse")]
        System.IAsyncResult BeginIsConfirmEmail(System.Guid userid, System.AsyncCallback callback, object asyncState);
        
        bool EndIsConfirmEmail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAccountService/ConfirmEmail", ReplyAction="http://tempuri.org/IAccountService/ConfirmEmailResponse")]
        System.IAsyncResult BeginConfirmEmail(System.Guid userid, string code, System.AsyncCallback callback, object asyncState);
        
        bool EndConfirmEmail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAccountService/ResendConfirmation", ReplyAction="http://tempuri.org/IAccountService/ResendConfirmationResponse")]
        System.IAsyncResult BeginResendConfirmation(System.Guid userid, System.AsyncCallback callback, object asyncState);
        
        void EndResendConfirmation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAccountService/UpdateUserData", ReplyAction="http://tempuri.org/IAccountService/UpdateUserDataResponse")]
        System.IAsyncResult BeginUpdateUserData(Hangout.Client.AccountService.UserData userData, string zat, System.AsyncCallback callback, object asyncState);
        
        Hangout.Client.AccountService.Status EndUpdateUserData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAccountService/GetUserData", ReplyAction="http://tempuri.org/IAccountService/GetUserDataResponse")]
        System.IAsyncResult BeginGetUserData(System.Guid userId, string zat, System.AsyncCallback callback, object asyncState);
        
        Hangout.Client.AccountService.UserData EndGetUserData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAccountService/GetCompleteUserData", ReplyAction="http://tempuri.org/IAccountService/GetCompleteUserDataResponse")]
        System.IAsyncResult BeginGetCompleteUserData(string zat, System.AsyncCallback callback, object asyncState);
        
        Hangout.Client.AccountService.CompleteUserData EndGetCompleteUserData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAccountService/GetAvatars", ReplyAction="http://tempuri.org/IAccountService/GetAvatarsResponse")]
        System.IAsyncResult BeginGetAvatars(System.Guid userId, string zat, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndGetAvatars(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAccountService/SaveProfileImage", ReplyAction="http://tempuri.org/IAccountService/SaveProfileImageResponse")]
        System.IAsyncResult BeginSaveProfileImage(System.Guid userId, byte[] image, string zat, System.AsyncCallback callback, object asyncState);
        
        string EndSaveProfileImage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAccountService/UpdateActivityLog", ReplyAction="http://tempuri.org/IAccountService/UpdateActivityLogResponse")]
        System.IAsyncResult BeginUpdateActivityLog(System.Guid userId, string zat, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateActivityLog(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountServiceChannel : Hangout.Client.AccountService.IAccountService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsConfirmEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsConfirmEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConfirmEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ConfirmEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateUserDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateUserDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Hangout.Client.AccountService.Status Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Hangout.Client.AccountService.Status)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Hangout.Client.AccountService.UserData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Hangout.Client.AccountService.UserData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCompleteUserDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCompleteUserDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Hangout.Client.AccountService.CompleteUserData Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Hangout.Client.AccountService.CompleteUserData)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAvatarsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAvatarsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveProfileImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveProfileImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountServiceClient : System.ServiceModel.ClientBase<Hangout.Client.AccountService.IAccountService>, Hangout.Client.AccountService.IAccountService {
        
        private BeginOperationDelegate onBeginIsConfirmEmailDelegate;
        
        private EndOperationDelegate onEndIsConfirmEmailDelegate;
        
        private System.Threading.SendOrPostCallback onIsConfirmEmailCompletedDelegate;
        
        private BeginOperationDelegate onBeginConfirmEmailDelegate;
        
        private EndOperationDelegate onEndConfirmEmailDelegate;
        
        private System.Threading.SendOrPostCallback onConfirmEmailCompletedDelegate;
        
        private BeginOperationDelegate onBeginResendConfirmationDelegate;
        
        private EndOperationDelegate onEndResendConfirmationDelegate;
        
        private System.Threading.SendOrPostCallback onResendConfirmationCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateUserDataDelegate;
        
        private EndOperationDelegate onEndUpdateUserDataDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateUserDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserDataDelegate;
        
        private EndOperationDelegate onEndGetUserDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCompleteUserDataDelegate;
        
        private EndOperationDelegate onEndGetCompleteUserDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetCompleteUserDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAvatarsDelegate;
        
        private EndOperationDelegate onEndGetAvatarsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAvatarsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveProfileImageDelegate;
        
        private EndOperationDelegate onEndSaveProfileImageDelegate;
        
        private System.Threading.SendOrPostCallback onSaveProfileImageCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateActivityLogDelegate;
        
        private EndOperationDelegate onEndUpdateActivityLogDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateActivityLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public AccountServiceClient() {
        }
        
        public AccountServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<IsConfirmEmailCompletedEventArgs> IsConfirmEmailCompleted;
        
        public event System.EventHandler<ConfirmEmailCompletedEventArgs> ConfirmEmailCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ResendConfirmationCompleted;
        
        public event System.EventHandler<UpdateUserDataCompletedEventArgs> UpdateUserDataCompleted;
        
        public event System.EventHandler<GetUserDataCompletedEventArgs> GetUserDataCompleted;
        
        public event System.EventHandler<GetCompleteUserDataCompletedEventArgs> GetCompleteUserDataCompleted;
        
        public event System.EventHandler<GetAvatarsCompletedEventArgs> GetAvatarsCompleted;
        
        public event System.EventHandler<SaveProfileImageCompletedEventArgs> SaveProfileImageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateActivityLogCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Hangout.Client.AccountService.IAccountService.BeginIsConfirmEmail(System.Guid userid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsConfirmEmail(userid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Hangout.Client.AccountService.IAccountService.EndIsConfirmEmail(System.IAsyncResult result) {
            return base.Channel.EndIsConfirmEmail(result);
        }
        
        private System.IAsyncResult OnBeginIsConfirmEmail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userid = ((System.Guid)(inValues[0]));
            return ((Hangout.Client.AccountService.IAccountService)(this)).BeginIsConfirmEmail(userid, callback, asyncState);
        }
        
        private object[] OnEndIsConfirmEmail(System.IAsyncResult result) {
            bool retVal = ((Hangout.Client.AccountService.IAccountService)(this)).EndIsConfirmEmail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsConfirmEmailCompleted(object state) {
            if ((this.IsConfirmEmailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsConfirmEmailCompleted(this, new IsConfirmEmailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsConfirmEmailAsync(System.Guid userid) {
            this.IsConfirmEmailAsync(userid, null);
        }
        
        public void IsConfirmEmailAsync(System.Guid userid, object userState) {
            if ((this.onBeginIsConfirmEmailDelegate == null)) {
                this.onBeginIsConfirmEmailDelegate = new BeginOperationDelegate(this.OnBeginIsConfirmEmail);
            }
            if ((this.onEndIsConfirmEmailDelegate == null)) {
                this.onEndIsConfirmEmailDelegate = new EndOperationDelegate(this.OnEndIsConfirmEmail);
            }
            if ((this.onIsConfirmEmailCompletedDelegate == null)) {
                this.onIsConfirmEmailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsConfirmEmailCompleted);
            }
            base.InvokeAsync(this.onBeginIsConfirmEmailDelegate, new object[] {
                        userid}, this.onEndIsConfirmEmailDelegate, this.onIsConfirmEmailCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Hangout.Client.AccountService.IAccountService.BeginConfirmEmail(System.Guid userid, string code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginConfirmEmail(userid, code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Hangout.Client.AccountService.IAccountService.EndConfirmEmail(System.IAsyncResult result) {
            return base.Channel.EndConfirmEmail(result);
        }
        
        private System.IAsyncResult OnBeginConfirmEmail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userid = ((System.Guid)(inValues[0]));
            string code = ((string)(inValues[1]));
            return ((Hangout.Client.AccountService.IAccountService)(this)).BeginConfirmEmail(userid, code, callback, asyncState);
        }
        
        private object[] OnEndConfirmEmail(System.IAsyncResult result) {
            bool retVal = ((Hangout.Client.AccountService.IAccountService)(this)).EndConfirmEmail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnConfirmEmailCompleted(object state) {
            if ((this.ConfirmEmailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ConfirmEmailCompleted(this, new ConfirmEmailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ConfirmEmailAsync(System.Guid userid, string code) {
            this.ConfirmEmailAsync(userid, code, null);
        }
        
        public void ConfirmEmailAsync(System.Guid userid, string code, object userState) {
            if ((this.onBeginConfirmEmailDelegate == null)) {
                this.onBeginConfirmEmailDelegate = new BeginOperationDelegate(this.OnBeginConfirmEmail);
            }
            if ((this.onEndConfirmEmailDelegate == null)) {
                this.onEndConfirmEmailDelegate = new EndOperationDelegate(this.OnEndConfirmEmail);
            }
            if ((this.onConfirmEmailCompletedDelegate == null)) {
                this.onConfirmEmailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnConfirmEmailCompleted);
            }
            base.InvokeAsync(this.onBeginConfirmEmailDelegate, new object[] {
                        userid,
                        code}, this.onEndConfirmEmailDelegate, this.onConfirmEmailCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Hangout.Client.AccountService.IAccountService.BeginResendConfirmation(System.Guid userid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginResendConfirmation(userid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Hangout.Client.AccountService.IAccountService.EndResendConfirmation(System.IAsyncResult result) {
            base.Channel.EndResendConfirmation(result);
        }
        
        private System.IAsyncResult OnBeginResendConfirmation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userid = ((System.Guid)(inValues[0]));
            return ((Hangout.Client.AccountService.IAccountService)(this)).BeginResendConfirmation(userid, callback, asyncState);
        }
        
        private object[] OnEndResendConfirmation(System.IAsyncResult result) {
            ((Hangout.Client.AccountService.IAccountService)(this)).EndResendConfirmation(result);
            return null;
        }
        
        private void OnResendConfirmationCompleted(object state) {
            if ((this.ResendConfirmationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ResendConfirmationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ResendConfirmationAsync(System.Guid userid) {
            this.ResendConfirmationAsync(userid, null);
        }
        
        public void ResendConfirmationAsync(System.Guid userid, object userState) {
            if ((this.onBeginResendConfirmationDelegate == null)) {
                this.onBeginResendConfirmationDelegate = new BeginOperationDelegate(this.OnBeginResendConfirmation);
            }
            if ((this.onEndResendConfirmationDelegate == null)) {
                this.onEndResendConfirmationDelegate = new EndOperationDelegate(this.OnEndResendConfirmation);
            }
            if ((this.onResendConfirmationCompletedDelegate == null)) {
                this.onResendConfirmationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnResendConfirmationCompleted);
            }
            base.InvokeAsync(this.onBeginResendConfirmationDelegate, new object[] {
                        userid}, this.onEndResendConfirmationDelegate, this.onResendConfirmationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Hangout.Client.AccountService.IAccountService.BeginUpdateUserData(Hangout.Client.AccountService.UserData userData, string zat, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateUserData(userData, zat, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Hangout.Client.AccountService.Status Hangout.Client.AccountService.IAccountService.EndUpdateUserData(System.IAsyncResult result) {
            return base.Channel.EndUpdateUserData(result);
        }
        
        private System.IAsyncResult OnBeginUpdateUserData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Hangout.Client.AccountService.UserData userData = ((Hangout.Client.AccountService.UserData)(inValues[0]));
            string zat = ((string)(inValues[1]));
            return ((Hangout.Client.AccountService.IAccountService)(this)).BeginUpdateUserData(userData, zat, callback, asyncState);
        }
        
        private object[] OnEndUpdateUserData(System.IAsyncResult result) {
            Hangout.Client.AccountService.Status retVal = ((Hangout.Client.AccountService.IAccountService)(this)).EndUpdateUserData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateUserDataCompleted(object state) {
            if ((this.UpdateUserDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateUserDataCompleted(this, new UpdateUserDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateUserDataAsync(Hangout.Client.AccountService.UserData userData, string zat) {
            this.UpdateUserDataAsync(userData, zat, null);
        }
        
        public void UpdateUserDataAsync(Hangout.Client.AccountService.UserData userData, string zat, object userState) {
            if ((this.onBeginUpdateUserDataDelegate == null)) {
                this.onBeginUpdateUserDataDelegate = new BeginOperationDelegate(this.OnBeginUpdateUserData);
            }
            if ((this.onEndUpdateUserDataDelegate == null)) {
                this.onEndUpdateUserDataDelegate = new EndOperationDelegate(this.OnEndUpdateUserData);
            }
            if ((this.onUpdateUserDataCompletedDelegate == null)) {
                this.onUpdateUserDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateUserDataCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateUserDataDelegate, new object[] {
                        userData,
                        zat}, this.onEndUpdateUserDataDelegate, this.onUpdateUserDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Hangout.Client.AccountService.IAccountService.BeginGetUserData(System.Guid userId, string zat, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserData(userId, zat, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Hangout.Client.AccountService.UserData Hangout.Client.AccountService.IAccountService.EndGetUserData(System.IAsyncResult result) {
            return base.Channel.EndGetUserData(result);
        }
        
        private System.IAsyncResult OnBeginGetUserData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userId = ((System.Guid)(inValues[0]));
            string zat = ((string)(inValues[1]));
            return ((Hangout.Client.AccountService.IAccountService)(this)).BeginGetUserData(userId, zat, callback, asyncState);
        }
        
        private object[] OnEndGetUserData(System.IAsyncResult result) {
            Hangout.Client.AccountService.UserData retVal = ((Hangout.Client.AccountService.IAccountService)(this)).EndGetUserData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserDataCompleted(object state) {
            if ((this.GetUserDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserDataCompleted(this, new GetUserDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserDataAsync(System.Guid userId, string zat) {
            this.GetUserDataAsync(userId, zat, null);
        }
        
        public void GetUserDataAsync(System.Guid userId, string zat, object userState) {
            if ((this.onBeginGetUserDataDelegate == null)) {
                this.onBeginGetUserDataDelegate = new BeginOperationDelegate(this.OnBeginGetUserData);
            }
            if ((this.onEndGetUserDataDelegate == null)) {
                this.onEndGetUserDataDelegate = new EndOperationDelegate(this.OnEndGetUserData);
            }
            if ((this.onGetUserDataCompletedDelegate == null)) {
                this.onGetUserDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserDataDelegate, new object[] {
                        userId,
                        zat}, this.onEndGetUserDataDelegate, this.onGetUserDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Hangout.Client.AccountService.IAccountService.BeginGetCompleteUserData(string zat, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCompleteUserData(zat, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Hangout.Client.AccountService.CompleteUserData Hangout.Client.AccountService.IAccountService.EndGetCompleteUserData(System.IAsyncResult result) {
            return base.Channel.EndGetCompleteUserData(result);
        }
        
        private System.IAsyncResult OnBeginGetCompleteUserData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string zat = ((string)(inValues[0]));
            return ((Hangout.Client.AccountService.IAccountService)(this)).BeginGetCompleteUserData(zat, callback, asyncState);
        }
        
        private object[] OnEndGetCompleteUserData(System.IAsyncResult result) {
            Hangout.Client.AccountService.CompleteUserData retVal = ((Hangout.Client.AccountService.IAccountService)(this)).EndGetCompleteUserData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCompleteUserDataCompleted(object state) {
            if ((this.GetCompleteUserDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCompleteUserDataCompleted(this, new GetCompleteUserDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCompleteUserDataAsync(string zat) {
            this.GetCompleteUserDataAsync(zat, null);
        }
        
        public void GetCompleteUserDataAsync(string zat, object userState) {
            if ((this.onBeginGetCompleteUserDataDelegate == null)) {
                this.onBeginGetCompleteUserDataDelegate = new BeginOperationDelegate(this.OnBeginGetCompleteUserData);
            }
            if ((this.onEndGetCompleteUserDataDelegate == null)) {
                this.onEndGetCompleteUserDataDelegate = new EndOperationDelegate(this.OnEndGetCompleteUserData);
            }
            if ((this.onGetCompleteUserDataCompletedDelegate == null)) {
                this.onGetCompleteUserDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCompleteUserDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetCompleteUserDataDelegate, new object[] {
                        zat}, this.onEndGetCompleteUserDataDelegate, this.onGetCompleteUserDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Hangout.Client.AccountService.IAccountService.BeginGetAvatars(System.Guid userId, string zat, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAvatars(userId, zat, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> Hangout.Client.AccountService.IAccountService.EndGetAvatars(System.IAsyncResult result) {
            return base.Channel.EndGetAvatars(result);
        }
        
        private System.IAsyncResult OnBeginGetAvatars(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userId = ((System.Guid)(inValues[0]));
            string zat = ((string)(inValues[1]));
            return ((Hangout.Client.AccountService.IAccountService)(this)).BeginGetAvatars(userId, zat, callback, asyncState);
        }
        
        private object[] OnEndGetAvatars(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((Hangout.Client.AccountService.IAccountService)(this)).EndGetAvatars(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAvatarsCompleted(object state) {
            if ((this.GetAvatarsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAvatarsCompleted(this, new GetAvatarsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAvatarsAsync(System.Guid userId, string zat) {
            this.GetAvatarsAsync(userId, zat, null);
        }
        
        public void GetAvatarsAsync(System.Guid userId, string zat, object userState) {
            if ((this.onBeginGetAvatarsDelegate == null)) {
                this.onBeginGetAvatarsDelegate = new BeginOperationDelegate(this.OnBeginGetAvatars);
            }
            if ((this.onEndGetAvatarsDelegate == null)) {
                this.onEndGetAvatarsDelegate = new EndOperationDelegate(this.OnEndGetAvatars);
            }
            if ((this.onGetAvatarsCompletedDelegate == null)) {
                this.onGetAvatarsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAvatarsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAvatarsDelegate, new object[] {
                        userId,
                        zat}, this.onEndGetAvatarsDelegate, this.onGetAvatarsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Hangout.Client.AccountService.IAccountService.BeginSaveProfileImage(System.Guid userId, byte[] image, string zat, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveProfileImage(userId, image, zat, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Hangout.Client.AccountService.IAccountService.EndSaveProfileImage(System.IAsyncResult result) {
            return base.Channel.EndSaveProfileImage(result);
        }
        
        private System.IAsyncResult OnBeginSaveProfileImage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userId = ((System.Guid)(inValues[0]));
            byte[] image = ((byte[])(inValues[1]));
            string zat = ((string)(inValues[2]));
            return ((Hangout.Client.AccountService.IAccountService)(this)).BeginSaveProfileImage(userId, image, zat, callback, asyncState);
        }
        
        private object[] OnEndSaveProfileImage(System.IAsyncResult result) {
            string retVal = ((Hangout.Client.AccountService.IAccountService)(this)).EndSaveProfileImage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveProfileImageCompleted(object state) {
            if ((this.SaveProfileImageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveProfileImageCompleted(this, new SaveProfileImageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveProfileImageAsync(System.Guid userId, byte[] image, string zat) {
            this.SaveProfileImageAsync(userId, image, zat, null);
        }
        
        public void SaveProfileImageAsync(System.Guid userId, byte[] image, string zat, object userState) {
            if ((this.onBeginSaveProfileImageDelegate == null)) {
                this.onBeginSaveProfileImageDelegate = new BeginOperationDelegate(this.OnBeginSaveProfileImage);
            }
            if ((this.onEndSaveProfileImageDelegate == null)) {
                this.onEndSaveProfileImageDelegate = new EndOperationDelegate(this.OnEndSaveProfileImage);
            }
            if ((this.onSaveProfileImageCompletedDelegate == null)) {
                this.onSaveProfileImageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveProfileImageCompleted);
            }
            base.InvokeAsync(this.onBeginSaveProfileImageDelegate, new object[] {
                        userId,
                        image,
                        zat}, this.onEndSaveProfileImageDelegate, this.onSaveProfileImageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Hangout.Client.AccountService.IAccountService.BeginUpdateActivityLog(System.Guid userId, string zat, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateActivityLog(userId, zat, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Hangout.Client.AccountService.IAccountService.EndUpdateActivityLog(System.IAsyncResult result) {
            base.Channel.EndUpdateActivityLog(result);
        }
        
        private System.IAsyncResult OnBeginUpdateActivityLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userId = ((System.Guid)(inValues[0]));
            string zat = ((string)(inValues[1]));
            return ((Hangout.Client.AccountService.IAccountService)(this)).BeginUpdateActivityLog(userId, zat, callback, asyncState);
        }
        
        private object[] OnEndUpdateActivityLog(System.IAsyncResult result) {
            ((Hangout.Client.AccountService.IAccountService)(this)).EndUpdateActivityLog(result);
            return null;
        }
        
        private void OnUpdateActivityLogCompleted(object state) {
            if ((this.UpdateActivityLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateActivityLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateActivityLogAsync(System.Guid userId, string zat) {
            this.UpdateActivityLogAsync(userId, zat, null);
        }
        
        public void UpdateActivityLogAsync(System.Guid userId, string zat, object userState) {
            if ((this.onBeginUpdateActivityLogDelegate == null)) {
                this.onBeginUpdateActivityLogDelegate = new BeginOperationDelegate(this.OnBeginUpdateActivityLog);
            }
            if ((this.onEndUpdateActivityLogDelegate == null)) {
                this.onEndUpdateActivityLogDelegate = new EndOperationDelegate(this.OnEndUpdateActivityLog);
            }
            if ((this.onUpdateActivityLogCompletedDelegate == null)) {
                this.onUpdateActivityLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateActivityLogCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateActivityLogDelegate, new object[] {
                        userId,
                        zat}, this.onEndUpdateActivityLogDelegate, this.onUpdateActivityLogCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Hangout.Client.AccountService.IAccountService CreateChannel() {
            return new AccountServiceClientChannel(this);
        }
        
        private class AccountServiceClientChannel : ChannelBase<Hangout.Client.AccountService.IAccountService>, Hangout.Client.AccountService.IAccountService {
            
            public AccountServiceClientChannel(System.ServiceModel.ClientBase<Hangout.Client.AccountService.IAccountService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginIsConfirmEmail(System.Guid userid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userid;
                System.IAsyncResult _result = base.BeginInvoke("IsConfirmEmail", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndIsConfirmEmail(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("IsConfirmEmail", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginConfirmEmail(System.Guid userid, string code, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userid;
                _args[1] = code;
                System.IAsyncResult _result = base.BeginInvoke("ConfirmEmail", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndConfirmEmail(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ConfirmEmail", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginResendConfirmation(System.Guid userid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userid;
                System.IAsyncResult _result = base.BeginInvoke("ResendConfirmation", _args, callback, asyncState);
                return _result;
            }
            
            public void EndResendConfirmation(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ResendConfirmation", _args, result);
            }
            
            public System.IAsyncResult BeginUpdateUserData(Hangout.Client.AccountService.UserData userData, string zat, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userData;
                _args[1] = zat;
                System.IAsyncResult _result = base.BeginInvoke("UpdateUserData", _args, callback, asyncState);
                return _result;
            }
            
            public Hangout.Client.AccountService.Status EndUpdateUserData(System.IAsyncResult result) {
                object[] _args = new object[0];
                Hangout.Client.AccountService.Status _result = ((Hangout.Client.AccountService.Status)(base.EndInvoke("UpdateUserData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUserData(System.Guid userId, string zat, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userId;
                _args[1] = zat;
                System.IAsyncResult _result = base.BeginInvoke("GetUserData", _args, callback, asyncState);
                return _result;
            }
            
            public Hangout.Client.AccountService.UserData EndGetUserData(System.IAsyncResult result) {
                object[] _args = new object[0];
                Hangout.Client.AccountService.UserData _result = ((Hangout.Client.AccountService.UserData)(base.EndInvoke("GetUserData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCompleteUserData(string zat, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = zat;
                System.IAsyncResult _result = base.BeginInvoke("GetCompleteUserData", _args, callback, asyncState);
                return _result;
            }
            
            public Hangout.Client.AccountService.CompleteUserData EndGetCompleteUserData(System.IAsyncResult result) {
                object[] _args = new object[0];
                Hangout.Client.AccountService.CompleteUserData _result = ((Hangout.Client.AccountService.CompleteUserData)(base.EndInvoke("GetCompleteUserData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAvatars(System.Guid userId, string zat, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userId;
                _args[1] = zat;
                System.IAsyncResult _result = base.BeginInvoke("GetAvatars", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndGetAvatars(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("GetAvatars", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveProfileImage(System.Guid userId, byte[] image, string zat, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = userId;
                _args[1] = image;
                _args[2] = zat;
                System.IAsyncResult _result = base.BeginInvoke("SaveProfileImage", _args, callback, asyncState);
                return _result;
            }
            
            public string EndSaveProfileImage(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("SaveProfileImage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateActivityLog(System.Guid userId, string zat, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userId;
                _args[1] = zat;
                System.IAsyncResult _result = base.BeginInvoke("UpdateActivityLog", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateActivityLog(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateActivityLog", _args, result);
            }
        }
    }
}
