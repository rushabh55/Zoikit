//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace Hangout.Client.UserService {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FollowResult", Namespace="http://schemas.datacontract.org/2004/07/Hangout.Web.Core.Follow")]
    public enum FollowResult : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Following = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unfollowed = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AlreadyFollowing = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AlreadyUnfollowing = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Hangout.Web.Services.Objects.Accounts")]
    public partial class User : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AboutUsField;
        
        private int CommonItemsField;
        
        private bool IsFollowingField;
        
        private string NameField;
        
        private string ProfilePicURLField;
        
        private System.Guid UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AboutUs {
            get {
                return this.AboutUsField;
            }
            set {
                if ((object.ReferenceEquals(this.AboutUsField, value) != true)) {
                    this.AboutUsField = value;
                    this.RaisePropertyChanged("AboutUs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommonItems {
            get {
                return this.CommonItemsField;
            }
            set {
                if ((this.CommonItemsField.Equals(value) != true)) {
                    this.CommonItemsField = value;
                    this.RaisePropertyChanged("CommonItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFollowing {
            get {
                return this.IsFollowingField;
            }
            set {
                if ((this.IsFollowingField.Equals(value) != true)) {
                    this.IsFollowingField = value;
                    this.RaisePropertyChanged("IsFollowing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfilePicURL {
            get {
                return this.ProfilePicURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfilePicURLField, value) != true)) {
                    this.ProfilePicURLField = value;
                    this.RaisePropertyChanged("ProfilePicURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompleteUserProfile", Namespace="http://schemas.datacontract.org/2004/07/Hangout.Web.Services.Objects.User")]
    public partial class CompleteUserProfile : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AboutUsField;
        
        private int BuzzCountField;
        
        private Hangout.Client.UserService.City CityField;
        
        private int FollowersCountField;
        
        private int FollowingCountField;
        
        private bool IsFollowingField;
        
        private string NameField;
        
        private string ProfilePicURLField;
        
        private System.Guid UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AboutUs {
            get {
                return this.AboutUsField;
            }
            set {
                if ((object.ReferenceEquals(this.AboutUsField, value) != true)) {
                    this.AboutUsField = value;
                    this.RaisePropertyChanged("AboutUs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuzzCount {
            get {
                return this.BuzzCountField;
            }
            set {
                if ((this.BuzzCountField.Equals(value) != true)) {
                    this.BuzzCountField = value;
                    this.RaisePropertyChanged("BuzzCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Hangout.Client.UserService.City City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FollowersCount {
            get {
                return this.FollowersCountField;
            }
            set {
                if ((this.FollowersCountField.Equals(value) != true)) {
                    this.FollowersCountField = value;
                    this.RaisePropertyChanged("FollowersCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FollowingCount {
            get {
                return this.FollowingCountField;
            }
            set {
                if ((this.FollowingCountField.Equals(value) != true)) {
                    this.FollowingCountField = value;
                    this.RaisePropertyChanged("FollowingCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsFollowing {
            get {
                return this.IsFollowingField;
            }
            set {
                if ((this.IsFollowingField.Equals(value) != true)) {
                    this.IsFollowingField = value;
                    this.RaisePropertyChanged("IsFollowing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfilePicURL {
            get {
                return this.ProfilePicURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfilePicURLField, value) != true)) {
                    this.ProfilePicURLField = value;
                    this.RaisePropertyChanged("ProfilePicURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="City", Namespace="http://schemas.datacontract.org/2004/07/Hangout.Web.Services.Objects.Locations")]
    public partial class City : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Hangout.Client.UserService.Country CountryField;
        
        private System.Guid IdField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Hangout.Client.UserService.Country Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Country", Namespace="http://schemas.datacontract.org/2004/07/Hangout.Web.Services.Objects.Locations")]
    public partial class Country : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid IdField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserService.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserService/FollowUser", ReplyAction="http://tempuri.org/IUserService/FollowUserResponse")]
        System.IAsyncResult BeginFollowUser(System.Guid userId, System.Guid followUserId, string zat, System.AsyncCallback callback, object asyncState);
        
        Hangout.Client.UserService.FollowResult EndFollowUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserService/UnfollowUser", ReplyAction="http://tempuri.org/IUserService/UnfollowUserResponse")]
        System.IAsyncResult BeginUnfollowUser(System.Guid userId, System.Guid unFollowUserId, string zat, System.AsyncCallback callback, object asyncState);
        
        Hangout.Client.UserService.FollowResult EndUnfollowUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserService/GetUsersFollowing", ReplyAction="http://tempuri.org/IUserService/GetUsersFollowingResponse")]
        System.IAsyncResult BeginGetUsersFollowing(System.Guid userId, int take, System.Collections.ObjectModel.ObservableCollection<System.Guid> skipList, string zat, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User> EndGetUsersFollowing(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserService/GetUsersFollowed", ReplyAction="http://tempuri.org/IUserService/GetUsersFollowedResponse")]
        System.IAsyncResult BeginGetUsersFollowed(System.Guid userId, int take, System.Collections.ObjectModel.ObservableCollection<System.Guid> skipList, string zat, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User> EndGetUsersFollowed(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserService/GetUserCompleteProfile", ReplyAction="http://tempuri.org/IUserService/GetUserCompleteProfileResponse")]
        System.IAsyncResult BeginGetUserCompleteProfile(System.Guid userId, System.Guid getprofile, string zat, System.AsyncCallback callback, object asyncState);
        
        Hangout.Client.UserService.CompleteUserProfile EndGetUserCompleteProfile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserService/GetLocalFollowersByTag", ReplyAction="http://tempuri.org/IUserService/GetLocalFollowersByTagResponse")]
        System.IAsyncResult BeginGetLocalFollowersByTag(System.Guid userId, System.Guid tagId, System.Guid cityId, int take, System.Collections.ObjectModel.ObservableCollection<System.Guid> skipList, string zat, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User> EndGetLocalFollowersByTag(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserService/SearchUsers", ReplyAction="http://tempuri.org/IUserService/SearchUsersResponse")]
        System.IAsyncResult BeginSearchUsers(System.Guid userId, string searchtext, int take, System.Collections.ObjectModel.ObservableCollection<System.Guid> skipList, double lat, double lon, System.Guid cityId, string zat, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User> EndSearchUsers(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : Hangout.Client.UserService.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FollowUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FollowUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Hangout.Client.UserService.FollowResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Hangout.Client.UserService.FollowResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UnfollowUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UnfollowUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Hangout.Client.UserService.FollowResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Hangout.Client.UserService.FollowResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUsersFollowingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUsersFollowingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUsersFollowedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUsersFollowedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserCompleteProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserCompleteProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Hangout.Client.UserService.CompleteUserProfile Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Hangout.Client.UserService.CompleteUserProfile)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLocalFollowersByTagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLocalFollowersByTagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<Hangout.Client.UserService.IUserService>, Hangout.Client.UserService.IUserService {
        
        private BeginOperationDelegate onBeginFollowUserDelegate;
        
        private EndOperationDelegate onEndFollowUserDelegate;
        
        private System.Threading.SendOrPostCallback onFollowUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginUnfollowUserDelegate;
        
        private EndOperationDelegate onEndUnfollowUserDelegate;
        
        private System.Threading.SendOrPostCallback onUnfollowUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUsersFollowingDelegate;
        
        private EndOperationDelegate onEndGetUsersFollowingDelegate;
        
        private System.Threading.SendOrPostCallback onGetUsersFollowingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUsersFollowedDelegate;
        
        private EndOperationDelegate onEndGetUsersFollowedDelegate;
        
        private System.Threading.SendOrPostCallback onGetUsersFollowedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserCompleteProfileDelegate;
        
        private EndOperationDelegate onEndGetUserCompleteProfileDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserCompleteProfileCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLocalFollowersByTagDelegate;
        
        private EndOperationDelegate onEndGetLocalFollowersByTagDelegate;
        
        private System.Threading.SendOrPostCallback onGetLocalFollowersByTagCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchUsersDelegate;
        
        private EndOperationDelegate onEndSearchUsersDelegate;
        
        private System.Threading.SendOrPostCallback onSearchUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<FollowUserCompletedEventArgs> FollowUserCompleted;
        
        public event System.EventHandler<UnfollowUserCompletedEventArgs> UnfollowUserCompleted;
        
        public event System.EventHandler<GetUsersFollowingCompletedEventArgs> GetUsersFollowingCompleted;
        
        public event System.EventHandler<GetUsersFollowedCompletedEventArgs> GetUsersFollowedCompleted;
        
        public event System.EventHandler<GetUserCompleteProfileCompletedEventArgs> GetUserCompleteProfileCompleted;
        
        public event System.EventHandler<GetLocalFollowersByTagCompletedEventArgs> GetLocalFollowersByTagCompleted;
        
        public event System.EventHandler<SearchUsersCompletedEventArgs> SearchUsersCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Hangout.Client.UserService.IUserService.BeginFollowUser(System.Guid userId, System.Guid followUserId, string zat, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFollowUser(userId, followUserId, zat, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Hangout.Client.UserService.FollowResult Hangout.Client.UserService.IUserService.EndFollowUser(System.IAsyncResult result) {
            return base.Channel.EndFollowUser(result);
        }
        
        private System.IAsyncResult OnBeginFollowUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userId = ((System.Guid)(inValues[0]));
            System.Guid followUserId = ((System.Guid)(inValues[1]));
            string zat = ((string)(inValues[2]));
            return ((Hangout.Client.UserService.IUserService)(this)).BeginFollowUser(userId, followUserId, zat, callback, asyncState);
        }
        
        private object[] OnEndFollowUser(System.IAsyncResult result) {
            Hangout.Client.UserService.FollowResult retVal = ((Hangout.Client.UserService.IUserService)(this)).EndFollowUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFollowUserCompleted(object state) {
            if ((this.FollowUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FollowUserCompleted(this, new FollowUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FollowUserAsync(System.Guid userId, System.Guid followUserId, string zat) {
            this.FollowUserAsync(userId, followUserId, zat, null);
        }
        
        public void FollowUserAsync(System.Guid userId, System.Guid followUserId, string zat, object userState) {
            if ((this.onBeginFollowUserDelegate == null)) {
                this.onBeginFollowUserDelegate = new BeginOperationDelegate(this.OnBeginFollowUser);
            }
            if ((this.onEndFollowUserDelegate == null)) {
                this.onEndFollowUserDelegate = new EndOperationDelegate(this.OnEndFollowUser);
            }
            if ((this.onFollowUserCompletedDelegate == null)) {
                this.onFollowUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFollowUserCompleted);
            }
            base.InvokeAsync(this.onBeginFollowUserDelegate, new object[] {
                        userId,
                        followUserId,
                        zat}, this.onEndFollowUserDelegate, this.onFollowUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Hangout.Client.UserService.IUserService.BeginUnfollowUser(System.Guid userId, System.Guid unFollowUserId, string zat, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUnfollowUser(userId, unFollowUserId, zat, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Hangout.Client.UserService.FollowResult Hangout.Client.UserService.IUserService.EndUnfollowUser(System.IAsyncResult result) {
            return base.Channel.EndUnfollowUser(result);
        }
        
        private System.IAsyncResult OnBeginUnfollowUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userId = ((System.Guid)(inValues[0]));
            System.Guid unFollowUserId = ((System.Guid)(inValues[1]));
            string zat = ((string)(inValues[2]));
            return ((Hangout.Client.UserService.IUserService)(this)).BeginUnfollowUser(userId, unFollowUserId, zat, callback, asyncState);
        }
        
        private object[] OnEndUnfollowUser(System.IAsyncResult result) {
            Hangout.Client.UserService.FollowResult retVal = ((Hangout.Client.UserService.IUserService)(this)).EndUnfollowUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUnfollowUserCompleted(object state) {
            if ((this.UnfollowUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UnfollowUserCompleted(this, new UnfollowUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UnfollowUserAsync(System.Guid userId, System.Guid unFollowUserId, string zat) {
            this.UnfollowUserAsync(userId, unFollowUserId, zat, null);
        }
        
        public void UnfollowUserAsync(System.Guid userId, System.Guid unFollowUserId, string zat, object userState) {
            if ((this.onBeginUnfollowUserDelegate == null)) {
                this.onBeginUnfollowUserDelegate = new BeginOperationDelegate(this.OnBeginUnfollowUser);
            }
            if ((this.onEndUnfollowUserDelegate == null)) {
                this.onEndUnfollowUserDelegate = new EndOperationDelegate(this.OnEndUnfollowUser);
            }
            if ((this.onUnfollowUserCompletedDelegate == null)) {
                this.onUnfollowUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUnfollowUserCompleted);
            }
            base.InvokeAsync(this.onBeginUnfollowUserDelegate, new object[] {
                        userId,
                        unFollowUserId,
                        zat}, this.onEndUnfollowUserDelegate, this.onUnfollowUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Hangout.Client.UserService.IUserService.BeginGetUsersFollowing(System.Guid userId, int take, System.Collections.ObjectModel.ObservableCollection<System.Guid> skipList, string zat, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUsersFollowing(userId, take, skipList, zat, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User> Hangout.Client.UserService.IUserService.EndGetUsersFollowing(System.IAsyncResult result) {
            return base.Channel.EndGetUsersFollowing(result);
        }
        
        private System.IAsyncResult OnBeginGetUsersFollowing(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userId = ((System.Guid)(inValues[0]));
            int take = ((int)(inValues[1]));
            System.Collections.ObjectModel.ObservableCollection<System.Guid> skipList = ((System.Collections.ObjectModel.ObservableCollection<System.Guid>)(inValues[2]));
            string zat = ((string)(inValues[3]));
            return ((Hangout.Client.UserService.IUserService)(this)).BeginGetUsersFollowing(userId, take, skipList, zat, callback, asyncState);
        }
        
        private object[] OnEndGetUsersFollowing(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User> retVal = ((Hangout.Client.UserService.IUserService)(this)).EndGetUsersFollowing(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUsersFollowingCompleted(object state) {
            if ((this.GetUsersFollowingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUsersFollowingCompleted(this, new GetUsersFollowingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUsersFollowingAsync(System.Guid userId, int take, System.Collections.ObjectModel.ObservableCollection<System.Guid> skipList, string zat) {
            this.GetUsersFollowingAsync(userId, take, skipList, zat, null);
        }
        
        public void GetUsersFollowingAsync(System.Guid userId, int take, System.Collections.ObjectModel.ObservableCollection<System.Guid> skipList, string zat, object userState) {
            if ((this.onBeginGetUsersFollowingDelegate == null)) {
                this.onBeginGetUsersFollowingDelegate = new BeginOperationDelegate(this.OnBeginGetUsersFollowing);
            }
            if ((this.onEndGetUsersFollowingDelegate == null)) {
                this.onEndGetUsersFollowingDelegate = new EndOperationDelegate(this.OnEndGetUsersFollowing);
            }
            if ((this.onGetUsersFollowingCompletedDelegate == null)) {
                this.onGetUsersFollowingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUsersFollowingCompleted);
            }
            base.InvokeAsync(this.onBeginGetUsersFollowingDelegate, new object[] {
                        userId,
                        take,
                        skipList,
                        zat}, this.onEndGetUsersFollowingDelegate, this.onGetUsersFollowingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Hangout.Client.UserService.IUserService.BeginGetUsersFollowed(System.Guid userId, int take, System.Collections.ObjectModel.ObservableCollection<System.Guid> skipList, string zat, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUsersFollowed(userId, take, skipList, zat, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User> Hangout.Client.UserService.IUserService.EndGetUsersFollowed(System.IAsyncResult result) {
            return base.Channel.EndGetUsersFollowed(result);
        }
        
        private System.IAsyncResult OnBeginGetUsersFollowed(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userId = ((System.Guid)(inValues[0]));
            int take = ((int)(inValues[1]));
            System.Collections.ObjectModel.ObservableCollection<System.Guid> skipList = ((System.Collections.ObjectModel.ObservableCollection<System.Guid>)(inValues[2]));
            string zat = ((string)(inValues[3]));
            return ((Hangout.Client.UserService.IUserService)(this)).BeginGetUsersFollowed(userId, take, skipList, zat, callback, asyncState);
        }
        
        private object[] OnEndGetUsersFollowed(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User> retVal = ((Hangout.Client.UserService.IUserService)(this)).EndGetUsersFollowed(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUsersFollowedCompleted(object state) {
            if ((this.GetUsersFollowedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUsersFollowedCompleted(this, new GetUsersFollowedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUsersFollowedAsync(System.Guid userId, int take, System.Collections.ObjectModel.ObservableCollection<System.Guid> skipList, string zat) {
            this.GetUsersFollowedAsync(userId, take, skipList, zat, null);
        }
        
        public void GetUsersFollowedAsync(System.Guid userId, int take, System.Collections.ObjectModel.ObservableCollection<System.Guid> skipList, string zat, object userState) {
            if ((this.onBeginGetUsersFollowedDelegate == null)) {
                this.onBeginGetUsersFollowedDelegate = new BeginOperationDelegate(this.OnBeginGetUsersFollowed);
            }
            if ((this.onEndGetUsersFollowedDelegate == null)) {
                this.onEndGetUsersFollowedDelegate = new EndOperationDelegate(this.OnEndGetUsersFollowed);
            }
            if ((this.onGetUsersFollowedCompletedDelegate == null)) {
                this.onGetUsersFollowedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUsersFollowedCompleted);
            }
            base.InvokeAsync(this.onBeginGetUsersFollowedDelegate, new object[] {
                        userId,
                        take,
                        skipList,
                        zat}, this.onEndGetUsersFollowedDelegate, this.onGetUsersFollowedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Hangout.Client.UserService.IUserService.BeginGetUserCompleteProfile(System.Guid userId, System.Guid getprofile, string zat, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserCompleteProfile(userId, getprofile, zat, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Hangout.Client.UserService.CompleteUserProfile Hangout.Client.UserService.IUserService.EndGetUserCompleteProfile(System.IAsyncResult result) {
            return base.Channel.EndGetUserCompleteProfile(result);
        }
        
        private System.IAsyncResult OnBeginGetUserCompleteProfile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userId = ((System.Guid)(inValues[0]));
            System.Guid getprofile = ((System.Guid)(inValues[1]));
            string zat = ((string)(inValues[2]));
            return ((Hangout.Client.UserService.IUserService)(this)).BeginGetUserCompleteProfile(userId, getprofile, zat, callback, asyncState);
        }
        
        private object[] OnEndGetUserCompleteProfile(System.IAsyncResult result) {
            Hangout.Client.UserService.CompleteUserProfile retVal = ((Hangout.Client.UserService.IUserService)(this)).EndGetUserCompleteProfile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserCompleteProfileCompleted(object state) {
            if ((this.GetUserCompleteProfileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserCompleteProfileCompleted(this, new GetUserCompleteProfileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserCompleteProfileAsync(System.Guid userId, System.Guid getprofile, string zat) {
            this.GetUserCompleteProfileAsync(userId, getprofile, zat, null);
        }
        
        public void GetUserCompleteProfileAsync(System.Guid userId, System.Guid getprofile, string zat, object userState) {
            if ((this.onBeginGetUserCompleteProfileDelegate == null)) {
                this.onBeginGetUserCompleteProfileDelegate = new BeginOperationDelegate(this.OnBeginGetUserCompleteProfile);
            }
            if ((this.onEndGetUserCompleteProfileDelegate == null)) {
                this.onEndGetUserCompleteProfileDelegate = new EndOperationDelegate(this.OnEndGetUserCompleteProfile);
            }
            if ((this.onGetUserCompleteProfileCompletedDelegate == null)) {
                this.onGetUserCompleteProfileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserCompleteProfileCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserCompleteProfileDelegate, new object[] {
                        userId,
                        getprofile,
                        zat}, this.onEndGetUserCompleteProfileDelegate, this.onGetUserCompleteProfileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Hangout.Client.UserService.IUserService.BeginGetLocalFollowersByTag(System.Guid userId, System.Guid tagId, System.Guid cityId, int take, System.Collections.ObjectModel.ObservableCollection<System.Guid> skipList, string zat, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLocalFollowersByTag(userId, tagId, cityId, take, skipList, zat, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User> Hangout.Client.UserService.IUserService.EndGetLocalFollowersByTag(System.IAsyncResult result) {
            return base.Channel.EndGetLocalFollowersByTag(result);
        }
        
        private System.IAsyncResult OnBeginGetLocalFollowersByTag(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userId = ((System.Guid)(inValues[0]));
            System.Guid tagId = ((System.Guid)(inValues[1]));
            System.Guid cityId = ((System.Guid)(inValues[2]));
            int take = ((int)(inValues[3]));
            System.Collections.ObjectModel.ObservableCollection<System.Guid> skipList = ((System.Collections.ObjectModel.ObservableCollection<System.Guid>)(inValues[4]));
            string zat = ((string)(inValues[5]));
            return ((Hangout.Client.UserService.IUserService)(this)).BeginGetLocalFollowersByTag(userId, tagId, cityId, take, skipList, zat, callback, asyncState);
        }
        
        private object[] OnEndGetLocalFollowersByTag(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User> retVal = ((Hangout.Client.UserService.IUserService)(this)).EndGetLocalFollowersByTag(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLocalFollowersByTagCompleted(object state) {
            if ((this.GetLocalFollowersByTagCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLocalFollowersByTagCompleted(this, new GetLocalFollowersByTagCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLocalFollowersByTagAsync(System.Guid userId, System.Guid tagId, System.Guid cityId, int take, System.Collections.ObjectModel.ObservableCollection<System.Guid> skipList, string zat) {
            this.GetLocalFollowersByTagAsync(userId, tagId, cityId, take, skipList, zat, null);
        }
        
        public void GetLocalFollowersByTagAsync(System.Guid userId, System.Guid tagId, System.Guid cityId, int take, System.Collections.ObjectModel.ObservableCollection<System.Guid> skipList, string zat, object userState) {
            if ((this.onBeginGetLocalFollowersByTagDelegate == null)) {
                this.onBeginGetLocalFollowersByTagDelegate = new BeginOperationDelegate(this.OnBeginGetLocalFollowersByTag);
            }
            if ((this.onEndGetLocalFollowersByTagDelegate == null)) {
                this.onEndGetLocalFollowersByTagDelegate = new EndOperationDelegate(this.OnEndGetLocalFollowersByTag);
            }
            if ((this.onGetLocalFollowersByTagCompletedDelegate == null)) {
                this.onGetLocalFollowersByTagCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLocalFollowersByTagCompleted);
            }
            base.InvokeAsync(this.onBeginGetLocalFollowersByTagDelegate, new object[] {
                        userId,
                        tagId,
                        cityId,
                        take,
                        skipList,
                        zat}, this.onEndGetLocalFollowersByTagDelegate, this.onGetLocalFollowersByTagCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Hangout.Client.UserService.IUserService.BeginSearchUsers(System.Guid userId, string searchtext, int take, System.Collections.ObjectModel.ObservableCollection<System.Guid> skipList, double lat, double lon, System.Guid cityId, string zat, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchUsers(userId, searchtext, take, skipList, lat, lon, cityId, zat, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User> Hangout.Client.UserService.IUserService.EndSearchUsers(System.IAsyncResult result) {
            return base.Channel.EndSearchUsers(result);
        }
        
        private System.IAsyncResult OnBeginSearchUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid userId = ((System.Guid)(inValues[0]));
            string searchtext = ((string)(inValues[1]));
            int take = ((int)(inValues[2]));
            System.Collections.ObjectModel.ObservableCollection<System.Guid> skipList = ((System.Collections.ObjectModel.ObservableCollection<System.Guid>)(inValues[3]));
            double lat = ((double)(inValues[4]));
            double lon = ((double)(inValues[5]));
            System.Guid cityId = ((System.Guid)(inValues[6]));
            string zat = ((string)(inValues[7]));
            return ((Hangout.Client.UserService.IUserService)(this)).BeginSearchUsers(userId, searchtext, take, skipList, lat, lon, cityId, zat, callback, asyncState);
        }
        
        private object[] OnEndSearchUsers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User> retVal = ((Hangout.Client.UserService.IUserService)(this)).EndSearchUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchUsersCompleted(object state) {
            if ((this.SearchUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchUsersCompleted(this, new SearchUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchUsersAsync(System.Guid userId, string searchtext, int take, System.Collections.ObjectModel.ObservableCollection<System.Guid> skipList, double lat, double lon, System.Guid cityId, string zat) {
            this.SearchUsersAsync(userId, searchtext, take, skipList, lat, lon, cityId, zat, null);
        }
        
        public void SearchUsersAsync(System.Guid userId, string searchtext, int take, System.Collections.ObjectModel.ObservableCollection<System.Guid> skipList, double lat, double lon, System.Guid cityId, string zat, object userState) {
            if ((this.onBeginSearchUsersDelegate == null)) {
                this.onBeginSearchUsersDelegate = new BeginOperationDelegate(this.OnBeginSearchUsers);
            }
            if ((this.onEndSearchUsersDelegate == null)) {
                this.onEndSearchUsersDelegate = new EndOperationDelegate(this.OnEndSearchUsers);
            }
            if ((this.onSearchUsersCompletedDelegate == null)) {
                this.onSearchUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchUsersCompleted);
            }
            base.InvokeAsync(this.onBeginSearchUsersDelegate, new object[] {
                        userId,
                        searchtext,
                        take,
                        skipList,
                        lat,
                        lon,
                        cityId,
                        zat}, this.onEndSearchUsersDelegate, this.onSearchUsersCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Hangout.Client.UserService.IUserService CreateChannel() {
            return new UserServiceClientChannel(this);
        }
        
        private class UserServiceClientChannel : ChannelBase<Hangout.Client.UserService.IUserService>, Hangout.Client.UserService.IUserService {
            
            public UserServiceClientChannel(System.ServiceModel.ClientBase<Hangout.Client.UserService.IUserService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginFollowUser(System.Guid userId, System.Guid followUserId, string zat, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = userId;
                _args[1] = followUserId;
                _args[2] = zat;
                System.IAsyncResult _result = base.BeginInvoke("FollowUser", _args, callback, asyncState);
                return _result;
            }
            
            public Hangout.Client.UserService.FollowResult EndFollowUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                Hangout.Client.UserService.FollowResult _result = ((Hangout.Client.UserService.FollowResult)(base.EndInvoke("FollowUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUnfollowUser(System.Guid userId, System.Guid unFollowUserId, string zat, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = userId;
                _args[1] = unFollowUserId;
                _args[2] = zat;
                System.IAsyncResult _result = base.BeginInvoke("UnfollowUser", _args, callback, asyncState);
                return _result;
            }
            
            public Hangout.Client.UserService.FollowResult EndUnfollowUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                Hangout.Client.UserService.FollowResult _result = ((Hangout.Client.UserService.FollowResult)(base.EndInvoke("UnfollowUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUsersFollowing(System.Guid userId, int take, System.Collections.ObjectModel.ObservableCollection<System.Guid> skipList, string zat, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = userId;
                _args[1] = take;
                _args[2] = skipList;
                _args[3] = zat;
                System.IAsyncResult _result = base.BeginInvoke("GetUsersFollowing", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User> EndGetUsersFollowing(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User> _result = ((System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User>)(base.EndInvoke("GetUsersFollowing", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUsersFollowed(System.Guid userId, int take, System.Collections.ObjectModel.ObservableCollection<System.Guid> skipList, string zat, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = userId;
                _args[1] = take;
                _args[2] = skipList;
                _args[3] = zat;
                System.IAsyncResult _result = base.BeginInvoke("GetUsersFollowed", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User> EndGetUsersFollowed(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User> _result = ((System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User>)(base.EndInvoke("GetUsersFollowed", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUserCompleteProfile(System.Guid userId, System.Guid getprofile, string zat, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = userId;
                _args[1] = getprofile;
                _args[2] = zat;
                System.IAsyncResult _result = base.BeginInvoke("GetUserCompleteProfile", _args, callback, asyncState);
                return _result;
            }
            
            public Hangout.Client.UserService.CompleteUserProfile EndGetUserCompleteProfile(System.IAsyncResult result) {
                object[] _args = new object[0];
                Hangout.Client.UserService.CompleteUserProfile _result = ((Hangout.Client.UserService.CompleteUserProfile)(base.EndInvoke("GetUserCompleteProfile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLocalFollowersByTag(System.Guid userId, System.Guid tagId, System.Guid cityId, int take, System.Collections.ObjectModel.ObservableCollection<System.Guid> skipList, string zat, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = userId;
                _args[1] = tagId;
                _args[2] = cityId;
                _args[3] = take;
                _args[4] = skipList;
                _args[5] = zat;
                System.IAsyncResult _result = base.BeginInvoke("GetLocalFollowersByTag", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User> EndGetLocalFollowersByTag(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User> _result = ((System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User>)(base.EndInvoke("GetLocalFollowersByTag", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSearchUsers(System.Guid userId, string searchtext, int take, System.Collections.ObjectModel.ObservableCollection<System.Guid> skipList, double lat, double lon, System.Guid cityId, string zat, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[8];
                _args[0] = userId;
                _args[1] = searchtext;
                _args[2] = take;
                _args[3] = skipList;
                _args[4] = lat;
                _args[5] = lon;
                _args[6] = cityId;
                _args[7] = zat;
                System.IAsyncResult _result = base.BeginInvoke("SearchUsers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User> EndSearchUsers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User> _result = ((System.Collections.ObjectModel.ObservableCollection<Hangout.Client.UserService.User>)(base.EndInvoke("SearchUsers", _args, result)));
                return _result;
            }
        }
    }
}
